"""
Οπτικοποίηση Γράφου Περιορισμών για CSP Χρονοπρογραμματισμού
"""
import graphviz

def create_constraint_graph():
    # Δημιουργία νέου κατευθυνόμενου γράφου
    dot = graphviz.Digraph(comment='Γράφος Περιορισμών CSP Χρονοπρογραμματισμού')
    dot.attr(rankdir='LR')

    # Προσθήκη κόμβων (ενέργειες)
    for action in ['A1', 'A2', 'A3', 'A4', 'A5']:
        dot.node(action, action)

    # Προσθήκη περιορισμών χρονικής διάταξης (κατευθυνόμενες ακμές)
    # A3 -> A1 (το A1 πρέπει να ξεκινήσει μετά το A3)
    dot.edge('A3', 'A1', 'Έναρξη(A1) > Έναρξη(A3)')

    # A5 -> A3 -> A4 (το A3 πρέπει να ξεκινήσει πριν το A4 και μετά το A5)
    dot.edge('A5', 'A3', 'Έναρξη(A3) > Έναρξη(A5)')
    dot.edge('A3', 'A4', 'Έναρξη(A4) > Έναρξη(A3)')

    # Προσθήκη περιορισμών μη-ταυτόχρονης εκτέλεσης (μη κατευθυνόμενες ακμές)
    # Το A2 δεν μπορεί να εκτελεστεί ταυτόχρονα με τα A1 ή A4
    dot.edge('A2', 'A1', 'Έναρξη(A2) ≠ Έναρξη(A1)', dir='both')
    dot.edge('A2', 'A4', 'Έναρξη(A2) ≠ Έναρξη(A4)', dir='both')

    # Προσθήκη περιορισμού πεδίου τιμών για το A4
    dot.node('D4', 'Πεδίο(A4)\n{9,11}', shape='box')
    dot.edge('D4', 'A4', 'Έναρξη(A4) ≠ 10')

    # Αποθήκευση του γράφου
    dot.render('constraint_graph', format='png', cleanup=True)

    # Επιστροφή κειμενικής αναπαράστασης
    return """
Περιγραφή Γράφου Περιορισμών:

Κόμβοι:
1. Κόμβοι Ενεργειών: A1, A2, A3, A4, A5
2. Κόμβος Πεδίου: D4 (ειδικός περιορισμός πεδίου για το A4)

Ακμές:
1. Χρονική Διάταξη (κατευθυνόμενες):
   - A3 → A1: Έναρξη(A1) > Έναρξη(A3)
   - A5 → A3: Έναρξη(A3) > Έναρξη(A5)
   - A3 → A4: Έναρξη(A4) > Έναρξη(A3)

2. Μη-ταυτόχρονη Εκτέλεση (αμφίδρομες):
   - A2 ↔ A1: Έναρξη(A2) ≠ Έναρξη(A1)
   - A2 ↔ A4: Έναρξη(A2) ≠ Έναρξη(A4)

3. Περιορισμός Πεδίου:
   - D4 → A4: Έναρξη(A4) ≠ 10

Ιδιότητες Γράφου:
1. Οι κατευθυνόμενες ακμές αναπαριστούν χρονική διάταξη
2. Οι αμφίδρομες ακμές αναπαριστούν περιορισμούς μη-ταυτόχρονης εκτέλεσης
3. Ο κόμβος-πλαίσιο αναπαριστά περιορισμό πεδίου τιμών
4. Όλοι οι κόμβοι έχουν πεδίο τιμών {9,10,11} εκτός από το A4: {9,11}

Ο γράφος δείχνει:
- Αλυσίδα χρονικών εξαρτήσεων: A5 → A3 → {A1,A4}
- Σχέσεις μη-ταυτόχρονης εκτέλεσης για το A2
- Ειδικό περιορισμό πεδίου τιμών για το A4
"""

if __name__ == "__main__":
    print(create_constraint_graph())
    print("\nΟ γράφος περιορισμών έχει αποθηκευτεί ως 'constraint_graph.png'")
