"""
Υλοποίηση D-Graph για το Πρόβλημα του Σχήματος 3 από το άρθρο Simple Temporal Problems

Συγγραφέας: Στυλιανός Ζαχαριουδάκης
ΑΜ: 1115202200243
"""
from d_graph_algorithm import DGraph

def analyze_figure3_problem() -> str:
    """
    Ανάλυση του προβλήματος από το Σχήμα 3 του άρθρου χρησιμοποιώντας τον αλγόριθμο d-graph.
    Το πρόβλημα περιλαμβάνει τέσσερα γεγονότα (X1-X4) με συγκεκριμένους χρονικούς περιορισμούς.
    """
    # Ορισμός γεγονότων από το Σχήμα 3
    events = ['X1', 'X2', 'X3', 'X4']

    # Περιορισμοί από το Σχήμα 3 (σελίδα 8)
    # Σύμφωνα με τον ορισμό στη σελίδα 9, κάθε περιορισμός Xj - Xi ≤ w
    # συνεπάγεται και τον περιορισμό Xi - Xj ≤ -w
    constraints = [
        # X2-X1 ≤ 2
        ('X1', 'X2', 2),
        ('X2', 'X1', -2),  # Αντίστροφος περιορισμός

        # 1 ≤ X3-X2 ≤ 4 ισοδύναμο με:
        # X3-X2 ≤ 4 και X2-X3 ≤ -1
        ('X2', 'X3', 4),
        ('X3', 'X2', -1),

        # X4-X2 ≤ -2
        ('X2', 'X4', -2),
        ('X4', 'X2', 2),  # Αντίστροφος περιορισμός

        # X4-X3 ≤ 1
        ('X3', 'X4', 1),
        ('X4', 'X3', -1)  # Αντίστροφος περιορισμός
    ]

    # Δημιουργία και υπολογισμός d-graph
    d_graph = DGraph(events, constraints)
    is_consistent, solution, negative_cycle = d_graph.compute_d_graph()

    analysis = """
Ανάλυση D-Graph του Προβλήματος Σχήματος 3:

1. Ορισμός Προβλήματος:
   Γεγονότα: X1, X2, X3, X4

2. Χρονικοί Περιορισμοί:
   α) X2-X1 ≤ 2
   β) 1 ≤ X3-X2 ≤ 4
   γ) X4-X2 ≤ -2
   δ) X4-X3 ≤ 1

3. Αποτέλεσμα Υπολογισμού D-Graph:"""

    if is_consistent:
        analysis += f"""
   Κατάσταση: ΣΥΝΕΠΕΣ
   Δεν βρέθηκαν αρνητικοί κύκλοι

4. Λύση (σχετικά με X1 στο χρόνο 0):"""
        # Προσαρμογή λύσης ώστε X1=0
        base = solution['X1']
        adjusted = {k: v - base for k, v in solution.items()}

        for event, time in sorted(adjusted.items()):
            analysis += f"\n   - {event}: {time:.1f}"

        # Επαλήθευση περιορισμών
        analysis += "\n\n5. Επαλήθευση Περιορισμών:"
        x1, x2, x3, x4 = [adjusted[f'X{i}'] for i in range(1, 5)]

        analysis += f"""
   α) X2-X1 ≤ 2: {x2-x1:.1f} ≤ 2 ({x2-x1 <= 2})
   β) 1 ≤ X3-X2 ≤ 4: {x3-x2:.1f} ({1 <= x3-x2 <= 4})
   γ) X4-X2 ≤ -2: {x4-x2:.1f} ≤ -2 ({x4-x2 <= -2})
   δ) X4-X3 ≤ 1: {x4-x3:.1f} ≤ 1 ({x4-x3 <= 1})"""
    else:
        analysis += f"""
   Κατάσταση: ΑΣΥΝΕΠΕΣ
   Βρέθηκε αρνητικός κύκλος: {' → '.join(negative_cycle.cycle)}
   Συνολικό βάρος: {negative_cycle.total_weight}

   Ανάλυση Αρνητικού Κύκλου:
   1. Περιορισμοί που δημιουργούν τον κύκλο:
      {' → '.join(f'{a}-{b}' for a, b in zip(negative_cycle.cycle[:-1], negative_cycle.cycle[1:]))}
   2. Επεξήγηση ασυνέπειας:
      - Από τον περιορισμό (β): X3-X2 ≥ 1
      - Από τον περιορισμό (γ): X4-X2 ≤ -2
      - Από τον περιορισμό (δ): X4-X3 ≤ 1
      Συνδυάζοντας τους περιορισμούς:
      X4-X2 ≤ -2 (από γ)
      X4-X3 ≤ 1  (από δ)
      X3-X2 ≥ 1  (από β)
      Προκύπτει αντίφαση καθώς:
      X4-X2 = (X4-X3) + (X3-X2) ≤ 1 + 1 = 2
      Αλλά ταυτόχρονα:
      X4-X2 ≤ -2

   Σύμφωνα με το Θεώρημα 3.1 (σελίδα 9):
   Ο αρνητικός κύκλος υποδεικνύει αντιφατικούς περιορισμούς
   που δεν μπορούν να ικανοποιηθούν ταυτόχρονα."""

    return analysis

if __name__ == "__main__":
    # Ανάλυση και των δύο προβλημάτων
    print("=== Πρόβλημα Μαρίας-Ελένης ===")
    from d_graph_algorithm import analyze_maria_eleni_problem
    print(analyze_maria_eleni_problem())

    print("\n=== Πρόβλημα Σχήματος 3 ===")
    print(analyze_figure3_problem())
